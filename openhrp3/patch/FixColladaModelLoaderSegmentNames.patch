Index: server/ModelLoader/BodyInfoCollada_impl.cpp
===================================================================
--- server/ModelLoader/BodyInfoCollada_impl.cpp	(リビジョン 2617)
+++ server/ModelLoader/BodyInfoCollada_impl.cpp	(作業コピー)
@@ -199,6 +199,7 @@
         _mapJointIds.clear();
         _mapLinkNames.clear();
         _veclinks.clear();
+        _veclinknames.clear();
     }
 
     /// \extract the first possible robot in the scene
@@ -284,7 +285,7 @@
 		  segmentInfo->transformMatrix[p++] = T(row, col);
 		}
 	      }
-	      segmentInfo->name = CORBA::string_dup(probot->links_[i].name);
+              segmentInfo->name = _veclinknames[i].c_str();
 	      segmentInfo->shapeIndices.length(probot->links_[i].shapeIndices.length());
 	      for(int j = 0; j < probot->links_[i].shapeIndices.length(); j++ ) {
 		segmentInfo->shapeIndices[j] = j;
@@ -731,6 +732,7 @@
         plink->jointType = CORBA::string_dup("free");
         int ilinkindex = (int)_veclinks.size();
         _veclinks.push_back(plink);
+        _veclinknames.push_back(linkname);
 
         if( !!pdomnode ) {
             COLLADALOG_VERBOSE(str(boost::format("Node Id %s and Name %s")%pdomnode->getId()%pdomnode->getName()));
@@ -3207,6 +3209,7 @@
     std::map<std::string,boost::shared_ptr<LinkInfo> > _mapJointIds;
     std::map<std::string,boost::shared_ptr<LinkInfo> > _mapLinkNames;
     std::vector<boost::shared_ptr<LinkInfo> > _veclinks;
+    std::vector<std::string> _veclinknames;
     int _nGlobalSensorId, _nGlobalActuatorId, _nGlobalManipulatorId, _nGlobalIndex;
     std::string _filename;
 };
